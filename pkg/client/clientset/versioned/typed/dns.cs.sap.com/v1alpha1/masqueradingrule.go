/*
SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and dns-masquerading-operator contributors
SPDX-License-Identifier: Apache-2.0
*/

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	context "context"

	dnscssapcomv1alpha1 "github.com/sap/dns-masquerading-operator/api/v1alpha1"
	scheme "github.com/sap/dns-masquerading-operator/pkg/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// MasqueradingRulesGetter has a method to return a MasqueradingRuleInterface.
// A group's client should implement this interface.
type MasqueradingRulesGetter interface {
	MasqueradingRules(namespace string) MasqueradingRuleInterface
}

// MasqueradingRuleInterface has methods to work with MasqueradingRule resources.
type MasqueradingRuleInterface interface {
	Create(ctx context.Context, masqueradingRule *dnscssapcomv1alpha1.MasqueradingRule, opts v1.CreateOptions) (*dnscssapcomv1alpha1.MasqueradingRule, error)
	Update(ctx context.Context, masqueradingRule *dnscssapcomv1alpha1.MasqueradingRule, opts v1.UpdateOptions) (*dnscssapcomv1alpha1.MasqueradingRule, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, masqueradingRule *dnscssapcomv1alpha1.MasqueradingRule, opts v1.UpdateOptions) (*dnscssapcomv1alpha1.MasqueradingRule, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*dnscssapcomv1alpha1.MasqueradingRule, error)
	List(ctx context.Context, opts v1.ListOptions) (*dnscssapcomv1alpha1.MasqueradingRuleList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *dnscssapcomv1alpha1.MasqueradingRule, err error)
	MasqueradingRuleExpansion
}

// masqueradingRules implements MasqueradingRuleInterface
type masqueradingRules struct {
	*gentype.ClientWithList[*dnscssapcomv1alpha1.MasqueradingRule, *dnscssapcomv1alpha1.MasqueradingRuleList]
}

// newMasqueradingRules returns a MasqueradingRules
func newMasqueradingRules(c *DnsV1alpha1Client, namespace string) *masqueradingRules {
	return &masqueradingRules{
		gentype.NewClientWithList[*dnscssapcomv1alpha1.MasqueradingRule, *dnscssapcomv1alpha1.MasqueradingRuleList](
			"masqueradingrules",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *dnscssapcomv1alpha1.MasqueradingRule { return &dnscssapcomv1alpha1.MasqueradingRule{} },
			func() *dnscssapcomv1alpha1.MasqueradingRuleList { return &dnscssapcomv1alpha1.MasqueradingRuleList{} },
		),
	}
}
